{"ast":null,"code":"var _jsxFileName = \"/Users/sachinkadam/Documents/Work/All projects/WeatherApp/WeatherApp-React/src/components/Autocomplete.js\";\nimport React, { Component } from 'react';\nimport accuWeather from '../api/accuWeather';\nimport Details from './Details';\nexport class Autocomplete extends Component {\n  constructor(props) {\n    super(props);\n\n    this.selectCity = async key => {\n      this.setState({\n        suggestions: []\n      });\n      const response = await accuWeather.get('/forecasts/v1/daily/5day/' + key, {\n        params: {\n          apikey: 'zCjp1TGMSdSbRF7nFHubd9HWIhLYfAJY'\n        }\n      });\n      this.setState({\n        selected: response.data.DailyForecasts\n      });\n      console.log(response.data.DailyForecasts);\n    };\n\n    this.state = {\n      suggestions: [],\n      selected: {}\n    };\n  }\n\n  componentWillReceiveProps() {\n    this.setState({\n      suggestions: this.props.suggestions\n    });\n  }\n\n  render() {\n    let suggestionsListComponent;\n\n    if (this.state.suggestions.length) {\n      suggestionsListComponent = React.createElement(\"ul\", {\n        className: \"suggestions\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, this.state.suggestions.map((suggestion, index) => {\n        return React.createElement(\"li\", {\n          key: suggestion.Key,\n          onClick: () => this.selectCity(suggestion.Key),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47\n          },\n          __self: this\n        }, suggestion.LocalizedName);\n      }));\n    }\n\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"Weather App\"), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-sm-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"Search CIty Name:\"), React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      onChange: e => this.props.onChange(e.target.value),\n      placeholder: \"Please Enter City Name.\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    })), suggestionsListComponent)), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-sm-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(Details, {\n      details: this.state.selected,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }))));\n  }\n\n}\nexport default Autocomplete;","map":{"version":3,"sources":["/Users/sachinkadam/Documents/Work/All projects/WeatherApp/WeatherApp-React/src/components/Autocomplete.js"],"names":["React","Component","accuWeather","Details","Autocomplete","constructor","props","selectCity","key","setState","suggestions","response","get","params","apikey","selected","data","DailyForecasts","console","log","state","componentWillReceiveProps","render","suggestionsListComponent","length","map","suggestion","index","Key","LocalizedName","e","onChange","target","value"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport accuWeather from '../api/accuWeather';\nimport Details from './Details';\n\nexport class Autocomplete extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      suggestions: [],\n      selected: {}\n    };\n  }\n\n  componentWillReceiveProps() {\n    this.setState({\n      suggestions: this.props.suggestions\n    })\n  }\n\n  selectCity = async (key) => {\n    this.setState({\n      suggestions: []\n    });\n\n    const response = await accuWeather.get('/forecasts/v1/daily/5day/' + key, {\n      params: { apikey: 'zCjp1TGMSdSbRF7nFHubd9HWIhLYfAJY' }\n    });\n\n    this.setState({\n      selected: response.data.DailyForecasts\n    });\n\n    console.log(response.data.DailyForecasts);\n\n  }\n\n  render() {\n\n    let suggestionsListComponent;\n\n    if (this.state.suggestions.length) {\n      suggestionsListComponent = (\n        <ul className=\"suggestions\">\n          {this.state.suggestions.map((suggestion, index) => {\n            return (\n              <li key={suggestion.Key} onClick={() => this.selectCity(suggestion.Key)}>\n                {suggestion.LocalizedName}\n              </li>\n            );\n          })}\n        </ul>\n      );\n    }\n\n    return (\n      <div className=\"container\">\n        <h2>Weather App</h2>\n        <div className=\"row\">\n          <div className=\"col-sm-4\">\n            <div className=\"form-group\">\n              <label>Search CIty Name:</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                onChange={(e) => this.props.onChange(e.target.value)}\n                placeholder=\"Please Enter City Name.\"\n              />\n            </div>\n            {suggestionsListComponent}\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-sm-12\">\n            <Details details={this.state.selected} />\n          </div>\n        </div>\n      </div>\n    );\n  };\n}\nexport default Autocomplete;"]},"metadata":{},"sourceType":"module"}